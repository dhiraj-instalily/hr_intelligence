# HR Intelligence Debugging Instructions

## Resume Extraction Debugging

When running the resume extraction pipeline, use the following debugging flags to ensure quality:

### 1. Extract Resumes with Debug Flag

```bash
python scripts/extract_resumes.py --input-file "data/processed_text/Sales Engineer AI Growth.txt" --output-dir "data/extracted_resumes" --clean --debug
```

The `--debug` flag will:
- Print the first 10 lines of each extracted resume
- Help verify that complete resume text is being captured
- Show which candidates were successfully extracted
- Identify any candidates that couldn't be found

### 2. LLM Schema Extraction with Preview Flag

```bash
python scripts/llm_schema_extraction.py --input-dir "data/extracted_resumes" --output-dir "data/llm_processed_resumes" --preview --max-previews 2
```

The `--preview` flag will:
- Show what would be sent to the LLM without making API calls
- Display both the system message (with schema) and user message (with resume text)
- Help verify the quality of the text being sent to the LLM
- Use `--max-previews` to control how many previews are shown

### 3. Process a Specific Resume File

If you need to process a specific resume file (e.g., after fixing extraction issues):

```bash
python scripts/llm_schema_extraction.py --input-dir "data/extracted_resumes" --output-dir "data/llm_processed_resumes" --specific-file "Candidate_Name.json"
```

## Troubleshooting Common Issues

### Missing or Incorrect Resume Content

If a candidate's resume is missing or contains incorrect information:

1. Check the extracted resume in `data/extracted_resumes/Candidate_Name.json`
2. Look at the `raw_text` field to see what was extracted
3. If the content is incorrect, you may need to manually create or fix the JSON file
4. Use the `--specific-file` flag to process just that candidate's resume

### Applicant Table Issues

The extraction script has been improved to handle cases where a candidate's information appears in an applicant table rather than a proper resume section. If you still encounter issues:

1. Use the `--debug` flag to see what's being extracted
2. Check if the candidate's name appears in a different format in the document
3. Add name variations to the `name_variations` dictionary in `extract_resumes.py`
4. For severe cases, manually create the JSON file with the correct information

### LLM Processing Issues

If the LLM produces incorrect or incomplete information:

1. Use the `--preview` flag to check what's being sent to the LLM
2. Verify that the raw text contains the complete resume information
3. If needed, manually edit the extracted resume JSON file to include better raw text
4. Process the specific file using the `--specific-file` flag

These debugging tools will help ensure that complete resume text is being captured and properly processed by the LLM.